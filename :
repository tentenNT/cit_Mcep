import numpy as np
import na2McepFunctions as mfunc
import na2McepClass as mclass

def distance_checker(template_data, test_data):
    print(template_data.word, test_data.word)
    distance_array = np.zeros(len(template_data.framedata), len(test_data.framedata))
#     for i in range(len(template_data.framedata)):
#         for j in range((len(test_data.framedata))):
#             print(i, j, np.linalg.norm(template_data.framedata[i] - test_data.framedata[j]))
# リスト内包表記にしてみる
#     distance_array = [print(i, j, np.linalg.norm(template_data.framedata[i] - test_data.framedata[j])) for i in range(len(template_data.framedata)) for j in range(len(test_data.framedata))]
    distance_array[:] = [np.linalg.norm(template_data.framedata[i] - test_data.framedata[j]) for i in range(len(template_data.framedata)) for j in range(len(test_data.framedata))]

# a_array = np.ndarray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
# b_array = np.ndarray([1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15])
# print(mfunc.local_distance(a_array, b_array))
# np.linalg.norm(a_array-b_array)

template_data_list = mclass.readfiles(mclass.template_data_location)
test_data_list = mclass.readfiles(mclass.test_data_location)
# print(template_data_list[2].framedata[0][4])
# こうすればcity011_003.textの0フレーム目の3次元目が取れる

# うっかり同じワード同士の比較しかやっていなかった
# これでは意味がない…DPマッチングするためには全部計算する必要がある
# for template_data, test_data in zip(template_data_list, test_data_list): というミス

# for template_data in template_data_list:
#     for test_data in test_data_list:
#         distance_checker(template_data, test_data)
# リスト内包表記にしてみる
distance_array = np.ndarray([distance_checker(template_data, test_data) for template_data in template_data_list for test_data in template_data_list])
